# Generated by Selenium IDE
import pytest
import time
import netconf
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestUntitled():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def wait_for_window(self, timeout = 2):
    time.sleep(round(timeout / 1000))
    wh_now = self.driver.window_handles
    wh_then = self.vars["window_handles"]
    if len(wh_now) > len(wh_then):
      return set(wh_now).difference(set(wh_then)).pop()
  
  def test_untitled(self):
    # Test name: Untitled
    # Step # | name | target | value
    # 1 | open | /topic/pythonzhengzebiaodashizaixianceshi.html | 
    self.driver.get("https://blog.51cto.com/topic/pythonzhengzebiaodashizaixianceshi.html")
    # 2 | setWindowSize | 1616x876 | 
    self.driver.set_window_size(1616, 876)
    # 3 | click | linkText=热门文章 | 
    self.driver.find_element(By.LINK_TEXT, "热门文章").click()
    # 4 | click | id=TopSearchInput | 
    self.driver.find_element(By.ID, "TopSearchInput").click()
    # 5 | type | id=TopSearchInput | 是打发斯蒂芬
    self.driver.find_element(By.ID, "TopSearchInput").send_keys("是打发斯蒂芬")
    # 6 | click | id=TopSearchBtn | 
    self.driver.find_element(By.ID, "TopSearchBtn").click()
    # 7 | mouseOver | id=TopSearchBtn | 
    self.vars["window_handles"] = self.driver.window_handles
    # 8 | mouseOut | id=TopSearchBtn | 
    # [object Object]
    # 9 | selectWindow | handle=${win788} | 
    self.vars["win788"] = self.wait_for_window(2000)
    # 10 | click | linkText=标签简介 | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 11 | click | css=.sorthead | 
    self.driver.switch_to.window(self.vars["win788"])
    self.driver.find_element(By.LINK_TEXT, "标签简介").click()
    self.driver.find_element(By.CSS_SELECTOR, ".sorthead").click()
  
